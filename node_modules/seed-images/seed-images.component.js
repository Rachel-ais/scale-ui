import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { HttpClient } from '@angular/common/http';
import * as beautify from 'js-beautify';
import * as Clipboard from 'clipboard';
import * as _ from 'lodash';
import 'rxjs/add/operator/toPromise';
var SeedImagesComponent = /** @class */ (function () {
    function SeedImagesComponent(http, domSanitizer) {
        this.http = http;
        this.domSanitizer = domSanitizer;
        this.imageImport = new EventEmitter();
        this.jobs = [];
        this.jobVersions = [];
        this.images = [];
        this.showDialog = false;
        this.importBtnIcon = 'fa-cloud-download';
        this.clipboard = new Clipboard('.copy-btn');
        this.msgs = [];
        this.showPackageDropdown = false;
    }
    SeedImagesComponent.prototype.handleError = function (err, summary) {
        var detail = '';
        if (err.status === 0) {
            detail = 'CORS error: Unable to access server';
        }
        else {
            detail = err.statusText && err.statusText.length > 0 ? err.statusText : 'Server error';
        }
        this.msgs = [];
        this.msgs.push({ severity: 'error', summary: summary || 'Error', detail: detail });
        this.importBtnIcon = 'fa-cloud-download';
        this.loading = false;
    };
    SeedImagesComponent.prototype.formatData = function (data) {
        var _this = this;
        data.forEach(function (d) {
            d.hsl = _this.colorByHashCode(d.Title);
        });
        this.jobs = data;
    };
    SeedImagesComponent.prototype.getHashCode = function (str) {
        var hash = 0;
        if (str.length === 0) {
            return hash;
        }
        for (var i = 0; i < str.length; i++) {
            hash = str.charCodeAt(i) + ((hash << 5) - hash);
            hash = hash & hash; // Convert to 32bit integer
        }
        return hash;
    };
    SeedImagesComponent.prototype.intToHSL = function (int) {
        var shortened = int % 360;
        shortened = Math.ceil(shortened / 20) * 20;
        shortened = shortened < 0 ? shortened + 360 : shortened;
        return "hsl(" + shortened + ", 100%, 80%)";
    };
    SeedImagesComponent.prototype.colorByHashCode = function (value) {
        return this.intToHSL(this.getHashCode(value));
    };
    SeedImagesComponent.prototype.getHeaderStyle = function (value) {
        return this.domSanitizer.bypassSecurityTrustStyle("background-color: " + value);
    };
    SeedImagesComponent.prototype.getJobs = function () {
        var _this = this;
        this.loading = true;
        return this.http.get(this.environment.siloUrl + "/jobs")
            .toPromise()
            .then(function (response) {
            _this.loading = false;
            return Promise.resolve(response);
        })
            .catch(function (err) {
            return Promise.reject(err);
        });
    };
    SeedImagesComponent.prototype.searchJobs = function (query) {
        var _this = this;
        this.loading = true;
        return this.http.get(this.environment.siloUrl + "/jobs/search/" + query)
            .toPromise()
            .then(function (response) {
            _this.loading = false;
            return Promise.resolve(response);
        })
            .catch(function (err) {
            return Promise.reject(err);
        });
    };
    SeedImagesComponent.prototype.getImageManifest = function (id) {
        var _this = this;
        this.importBtnIcon = 'fa-spinner fa-spin';
        return this.http.get(this.environment.siloUrl + "/images/" + id + "/manifest")
            .toPromise()
            .then(function (response) {
            _this.importBtnIcon = 'fa-cloud-download';
            return Promise.resolve(response);
        })
            .catch(function (err) {
            return Promise.reject(err);
        });
    };
    SeedImagesComponent.prototype.filterJobs = function (event) {
        var _this = this;
        if (event.query) {
            this.searchJobs(event.query).then(function (data) {
                // data comes back as an object of objects instead of an array
                // so convert it to an array
                // data comes back as an object of objects instead of an array
                // so convert it to an array
                _this.formatData(Object.values(data));
            }).catch(function (err) {
                _this.handleError(err, 'Job Search Failed');
            });
        }
        else {
            this.getJobs().then(function (data) {
                _this.formatData(data);
            }).catch(function (err) {
                _this.handleError(err, 'Job Retrieval Failed');
            });
        }
    };
    SeedImagesComponent.prototype.updateImageManifest = function () {
        var _this = this;
        this.getImageManifest(this.selectedImage.ID).then(function (data) {
            _this.imageManifest = data;
            _this.imageManifestDisplay = beautify(JSON.stringify(data));
        }).catch(function (err) {
            _this.handleError(err, 'Manifest Retrieval Failed');
        });
    };
    SeedImagesComponent.prototype.updateImages = function () {
        this.images = _.orderBy(this.selectedJobVersion.Images, ['PackageVersion'], ['desc']);
        this.selectedImage = this.images[0];
        this.updateImageManifest();
    };
    SeedImagesComponent.prototype.showJobDetails = function (job) {
        this.selectedJob = job;
        this.showDialog = true;
        this.jobVersions = _.orderBy(job.JobVersions, ['JobVersion'], ['desc']);
        this.selectedJobVersion = this.jobVersions[0];
        this.updateImages();
    };
    SeedImagesComponent.prototype.hideJobDetails = function () {
        this.selectedJob = null;
        this.showPackageDropdown = false;
    };
    SeedImagesComponent.prototype.onImportClick = function () {
        // emit with manifest json
        this.imageImport.emit(this.imageManifest);
        this.hideJobDetails();
    };
    SeedImagesComponent.prototype.choosePackage = function () {
        this.showPackageDropdown = true;
    };
    SeedImagesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.getJobs().then(function (data) {
            _this.formatData(data);
        }).catch(function (err) {
            _this.handleError(err, 'Job Retrieval Failed');
        });
        this.clipboard.on('success', function () {
            _this.msgs = [{ severity: 'success', summary: 'Success!', detail: 'Manifest JSON copied to clipboard.' }];
        });
    };
    SeedImagesComponent.decorators = [
        { type: Component, args: [{
                    selector: 'seed-images',
                    template: "\n        <div class=\"seed-jobs\">\n            <div class=\"search\">\n                <p-autoComplete [(ngModel)]=\"jobQueryResult\" (completeMethod)=\"filterJobs($event)\" field=\"Name\"\n                                styleClass=\"search-input\" placeholder=\"Search Jobs\" [minLength]=\"0\"></p-autoComplete>\n                <div class=\"loader\" *ngIf=\"loading\">\n                    <svg version=\"1.1\" id=\"loader\" xmlns=\"http://www.w3.org/2000/svg\"\n                         xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\"\n                         viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,\n                                             8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,\n                                             14.615,6.543,14.615,14.615H43.935z\">\n                            <animateTransform attributeType=\"xml\"\n                                              attributeName=\"transform\"\n                                              type=\"rotate\"\n                                              from=\"0 25 25\"\n                                              to=\"360 25 25\"\n                                              dur=\"0.6s\"\n                                              repeatCount=\"indefinite\"/>\n                        </path>\n                    </svg>\n                </div>\n            </div>\n            <div class=\"results\">\n                <h3>{{ jobs.length }} job<span *ngIf=\"jobs.length !== 1\">s</span> found</h3>\n                <p-dataGrid [value]=\"jobs\">\n                    <ng-template let-job pTemplate=\"item\">\n                        <div class=\"ui-g-12 ui-md-4\">\n                            <a (click)=\"showJobDetails(job)\">\n                                <p-panel [showHeader]=\"false\">\n                                    <div class=\"result-header\" [style]=\"getHeaderStyle(job.hsl)\">\n                                        <h3>{{ job.Title }}</h3>\n                                    </div>\n                                    <div class=\"result-content\">\n                                        <div class=\"job-description\">{{ job.Description }}</div>\n                                        <strong>Maintainer:</strong> {{ job.Maintainer }}<br />\n                                        <span *ngIf=\"job.MaintOrg\">\n                                        <strong>Organization:</strong> {{ job.MaintOrg }}\n                                    </span>\n                                    </div>\n                                </p-panel>\n                            </a>\n                        </div>\n                    </ng-template>\n                </p-dataGrid>\n                <p-dialog *ngIf=\"selectedJob\" [(visible)]=\"showDialog\" (onHide)=\"hideJobDetails()\" [responsive]=\"true\"\n                          [dismissableMask]=\"true\" [modal]=\"true\" width=\"auto\" positionTop=\"40\" class=\"job-details\">\n                    <p-header>\n                        {{ selectedJob.Title }}\n                        <p-dropdown [options]=\"jobVersions\" optionLabel=\"JobVersion\" [(ngModel)]=\"selectedJobVersion\"\n                                    (onChange)=\"updateImages()\" [showClear]=\"false\" [filter]=\"true\" [autoWidth]=\"false\">\n                        </p-dropdown>\n                        <button pButton class=\"ui-button-secondary\" icon=\"fa-cube\" pTooltip=\"Package version...\"\n                                (click)=\"choosePackage()\" *ngIf=\"!showPackageDropdown\"></button>\n                        <p-dropdown [options]=\"images\" optionLabel=\"PackageVersion\" [(ngModel)]=\"selectedImage\"\n                                    (onChange)=\"updateImageManifest()\" [showClear]=\"false\" *ngIf=\"showPackageDropdown\">\n                        </p-dropdown>\n                    </p-header>\n                    {{ selectedJob.Description }}\n                    <div class=\"header\">\n                        Manifest\n                        <button class=\"copy-btn ui-button-secondary\" pButton type=\"button\" icon=\"fa-copy\"\n                                pTooltip=\"Copy to clipboard\" tooltipPosition=\"left\" data-clipboard-target=\"#manifest\">\n                        </button>\n                    </div>\n                    <div class=\"code\">\n                        <pre id=\"manifest\"><code>{{ imageManifestDisplay }}</code></pre>\n                    </div>\n                    <p-footer *ngIf=\"environment.scale && imageManifest\">\n                        <button pButton type=\"button\" (click)=\"onImportClick()\" label=\"Import\" [icon]=\"importBtnIcon\"\n                                iconPos=\"right\"></button>\n                    </p-footer>\n                </p-dialog>\n            </div>\n        </div>\n        <p-growl [(value)]=\"msgs\"></p-growl>\n    ",
                    styles: ["\n        @keyframes spin {\n            to {\n                transform: rotate(1440deg);\n            }\n        }\n        .seed-jobs .search {\n            position: relative;\n            text-align: center;\n            width: 50%;\n            margin: 0 auto 15px auto;\n        }\n        ::ng-deep .seed-jobs .search-input {\n            width: 100%;\n        }\n        ::ng-deep .seed-jobs .ui-autocomplete-input {\n            width: 100%;\n        }\n        .seed-jobs .search .loader {\n            position: absolute;\n            top: 7px;\n            right: 20px;\n        }\n        .seed-jobs .search .loader svg path, .seed-jobs .search .loader svg rect {\n            fill: #FF6700;\n        }\n        ::ng-deep .seed-jobs .search .ui-inputtext {\n            font-size: 1.5em;\n        }\n        ::ng-deep .seed-jobs .search .ui-autocomplete-loader {\n            display: none;\n        }\n        .seed-jobs .results .result-header {\n            border-radius: 3px 3px 0 0;\n        }\n        .seed-jobs .results .result-header h3 {\n            text-align: center;\n            margin: 0;\n            padding: 7px 0;\n        }\n        .seed-jobs .results .result-content {\n            padding: 10px;\n            text-align: center;\n            min-height: 90px;\n        }\n        .seed-jobs .results .result-content .job-description {\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n        .seed-jobs .job-details {\n            width: 33%;\n        }\n        .seed-jobs .job-details h2 {\n            font-size: 1.2em;\n        }\n        .seed-jobs .job-details .header {\n            position: relative;\n            margin: 12px 0 0 0;\n            padding: 6px;\n            background: #777;\n            color: #fff;\n        }\n        .seed-jobs .job-details .header button {\n            position: absolute;\n            top: 5px;\n            right: 4px;\n            padding: 0;\n            font-size: 0.8em;\n        }\n        .seed-jobs .job-details .code {\n            position: relative;\n            margin-top: -14px;\n        }\n        .seed-jobs .job-details .code pre {\n            width: 100%;\n            max-height: 300px;\n            overflow-x: hidden;\n            background: #efefef;\n            border: 1px solid #bbb;\n            font-size: 0.9em;\n        }\n        ::ng-deep .seed-jobs .results .ui-panel .ui-panel-content {\n            padding: 0;\n        }\n        ::ng-deep .seed-jobs .results .ui-panel:hover {\n            background: #48ACFF;\n            transition: background-color 0.5s;\n        }\n        ::ng-deep .seed-jobs .results .ui-dialog {\n            width: 50%;\n        }\n        ::ng-deep .seed-jobs .results .ui-dropdown {\n            font-size: 0.7em;\n            width: 150px;\n        }\n        ::ng-deep .seed-jobs .results .ui-button {\n            font-size: 0.7em;\n        }\n    "]
                },] },
    ];
    /** @nocollapse */
    SeedImagesComponent.ctorParameters = function () { return [
        { type: HttpClient, },
        { type: DomSanitizer, },
    ]; };
    SeedImagesComponent.propDecorators = {
        "environment": [{ type: Input },],
        "imageImport": [{ type: Output },],
    };
    return SeedImagesComponent;
}());
export { SeedImagesComponent };
//# sourceMappingURL=seed-images.component.js.map